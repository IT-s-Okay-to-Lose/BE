name: CI/CD Deploy to EC2

on:
  push:
    branches: [ dev ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Make env file
        run: |
          echo "$ENV_PROPERTIES_DEV" | base64 --decode > .env
        env:
          ENV_PROPERTIES_DEV: ${{ secrets.ENV_PROPERTIES_DEV }}

      - name: Build with Gradle
        run: ./gradlew clean build
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/iotl .

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/iotl

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        env:
          ENV_PROPERTIES_DEV: ${{ secrets.ENV_PROPERTIES_DEV }}
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          envs: ENV_PROPERTIES_DEV
          script: |
            echo "$ENV_PROPERTIES_DEV" > .env
            docker pull ${{ secrets.DOCKER_USERNAME }}/iotl
            docker stop iotl || true
            docker rm iotl || true
            docker run -d \
              --env-file .env \
              -e SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }} \
              -p 8080:8080 \
              --name iotl \
              ${{ secrets.DOCKER_USERNAME }}/iotl \
              java -javaagent:sentry-opentelemetry-agent-8.14.0.jar -jar app.jar

      - name: Send Slack Notification (Success)
        if: success()
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"✅ [배포 성공] GitHub Actions에서 dev 브랜치가 성공적으로 배포되었습니다."}' \
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Send Slack Notification (Failure)
        if: failure()
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"❌ [배포 실패] GitHub Actions에서 문제가 발생했습니다. 로그를 확인해주세요."}' \
          ${{ secrets.SLACK_WEBHOOK_URL }}
